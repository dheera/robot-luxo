#!/usr/bin/env python3

import rospy
import time

from getch import getch
from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint
from sensor_msgs.msg import JointState
from geometry_msgs.msg import Twist

joint_states = {}
def on_joint_states(msg):
  global joint_states
  for i, name in enumerate(msg.name):
    joint_states[name] = msg.position[i]

def publish_trajectory(positions):
  trajectory = JointTrajectory()
  trajectory.joint_names = ["head", "neck", "ass", "knee", "foot"]

  point = JointTrajectoryPoint()
  point.time_from_start = rospy.Duration(0.25)
  point.positions = [
    positions[0],
    positions[1],
    positions[2],
    positions[3],
    positions[4],
  ]
  trajectory.points.append(point)

  pub_command.publish(trajectory)

def main():
    global pub_command
    rospy.init_node("luxo_joint_test")
    pub_command = rospy.Publisher("/luxo/controller/trajectory/command", JointTrajectory, queue_size = 1)
    sub_joint_states = rospy.Subscriber("/joint_states", JointState, on_joint_states)
    # rospy.spin()
    positions = [0.5, 0.5, 0.5, 0.5, 0.5]
    while True:
        time.sleep(0.1)
        print(positions)
        c = getch()
        if c == "1":
            positions[0] -= 0.1
        elif c == "2":
            positions[0] += 0.1
        elif c == "3":
            positions[1] -= 0.1
        elif c == "4":
            positions[1] += 0.1
        elif c == "5":
            positions[2] -= 0.1
        elif c == "6":
            positions[2] += 0.1
        elif c == "7":
            positions[3] -= 0.1
        elif c == "8":
            positions[3] += 0.1
        elif c == "9":
            positions[4] -= 0.1
        elif c == "0":
            positions[4] += 0.1
        if c == "q":
            break

        publish_trajectory(positions)

if __name__ == "__main__":
    main()

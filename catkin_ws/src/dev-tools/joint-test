#!/usr/bin/env python3

import rospy
import time

from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint
from sensor_msgs.msg import JointState
from geometry_msgs.msg import Twist

joint_states = {}
def on_joint_states(msg):
  global joint_states
  for i, name in enumerate(msg.name):
    joint_states[name] = msg.position[i]

def publish_trajectory(positions):
  trajectory = JointTrajectory()
  trajectory.joint_names = ["head", "neck", "ass", "knee", "foot"]

  point = JointTrajectoryPoint()
  point.time_from_start = rospy.Duration(0.25)
  point.positions = [
    positions[0],
    positions[1],
    positions[2],
    positions[3],
    positions[4],
  ]
  trajectory.points.append(point)

  pub_command.publish(trajectory)

def main():
    global pub_command
    rospy.init_node("luxo_joint_test")
    pub_command = rospy.Publisher("/luxo/controller/trajectory/command", JointTrajectory, queue_size = 1)
    sub_joint_states = rospy.Subscriber("/joint_states", JointState, on_joint_states)
    # rospy.spin()
    while True:
        time.sleep(0.1)
        positions_str = input("Enter joint positions or q to quit (e.g. 0.5 0.5 0.5 0.5 0.5):")
        if positions_str.startswith("q"):
            break
        positions = positions_str.split(" ")
        if len(positions) != 5:
            print("BAD: enter exactly 5 numbers no more no less")
            continue
        try:
            positions = list(map(lambda x:float(x), positions))
        except ValueError:
            print("BAD: ValueError")
            continue
        
        publish_trajectory(positions)

if __name__ == "__main__":
    main()
